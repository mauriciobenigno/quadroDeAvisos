package trabalhoSDRMI;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

public class QuadroDeAlertas extends javax.swing.JFrame implements MessageListener {

    RmiClient rmiClient = null;
    int contadorAlertas;
   

    /**
     * Creates new form QuadroDeAlertas
     */
    public QuadroDeAlertas() {
        initComponents();
        try {
           this.rmiClient = new RmiClient(this); 
        } catch(Exception e) {}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSaida = new javax.swing.JTable();
        comboAlertas = new javax.swing.JComboBox<>();
        btRemover = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel1.setText("QUADRO DE ALERTAS");

        tableSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Titulo", "Alerta", "Emissor", "Recebido em"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSaida.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableSaida);
        if (tableSaida.getColumnModel().getColumnCount() > 0) {
            tableSaida.getColumnModel().getColumn(0).setMaxWidth(40);
            tableSaida.getColumnModel().getColumn(2).setMinWidth(220);
        }

        comboAlertas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(comboAlertas, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(btRemover)
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAlertas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRemover))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        // TODO add your handling code here:
        if(comboAlertas.getItemCount()>0)
        {
            DefaultTableModel infos = (DefaultTableModel)tableSaida.getModel();
            int selec = comboAlertas.getSelectedIndex();            
            infos.removeRow(selec);
            contadorAlertas = infos.getRowCount();
            comboAlertas.removeAllItems();
            for(int i=0;i<contadorAlertas;i++)
            {  
                Object[] dadosAux = {Integer.toString(i+1),infos.getValueAt(i, 1),infos.getValueAt(i, 2),infos.getValueAt(i, 3),infos.getValueAt(i, 4)};
                infos.removeRow(i);
                infos.insertRow(i, dadosAux);
                comboAlertas.addItem(infos.getValueAt(i, 0)+" - "+infos.getValueAt(i, 1));
            }
        }
    }//GEN-LAST:event_btRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuadroDeAlertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuadroDeAlertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuadroDeAlertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuadroDeAlertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuadroDeAlertas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btRemover;
    private javax.swing.JComboBox<String> comboAlertas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableSaida;
    // End of variables declaration//GEN-END:variables

    @Override
    public void newMessage(Mensagem msg) {
        
        // Restage Data e Hora
        String data = "dd/MM/yyyy";
        String hora = "h:mm - a";
        Date recebido = new Date();
        SimpleDateFormat formatData = new SimpleDateFormat(data);
        SimpleDateFormat formatHora = new SimpleDateFormat(hora);
        String recebidoEm = formatData.format(recebido) +" "+formatHora.format(recebido);
        
        // Resgate das informações de Alerta
        String []informacoes = msg.getText().split(";");
        DefaultTableModel infos = (DefaultTableModel)tableSaida.getModel();
        Object[] dados = {"1",informacoes[0],informacoes[1],informacoes[2],recebidoEm};
        //infos.addRow(dados);
        infos.insertRow(0, dados);
        contadorAlertas = infos.getRowCount();
        comboAlertas.removeAllItems();
        for(int i=0;i<contadorAlertas;i++)
        {
            Object[] dadosAux = {Integer.toString(i+1),infos.getValueAt(i, 1),infos.getValueAt(i, 2),infos.getValueAt(i, 3),infos.getValueAt(i, 4)};
            infos.removeRow(i);
            infos.insertRow(i, dadosAux);
            comboAlertas.addItem(infos.getValueAt(i, 0)+" - "+infos.getValueAt(i, 1));
  
        }
    }
}
